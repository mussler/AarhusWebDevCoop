@inherits Umbraco.Web.Macros.PartialViewMacroPage
@using umbraco.MacroEngines;
    <nav class="navbar navbar-default">
        <div class="container-fluid">
            <!-- Brand and toggle get grouped for better mobile display -->
            <div class="navbar-header">
            </div>
            <div class="collapse navbar-collapse" id="bs-example-navbar-collapse-1">
                <ul class="nav navbar-nav">
                    @{

                        int startLevel = Convert.ToInt32(Model.MacroParameters["startLevel"]);
                        int finishLevel = Convert.ToInt32(Model.MacroParameters["finishLevel"]);
                        var parent = Model.Content.AncestorOrSelf(startLevel);

                        if (parent != null)
                        {
                            <li class="@(CurrentPage.Name == parent.Name ? "active" : null)">
                                <a href="@umbraco.library.NiceUrl(parent.Id)">@parent.Name</a>
                            </li>
                            @traverse(parent, startLevel, finishLevel);
                        }
                    }
                    @helper traverse(dynamic parent, int startLevel, int finishLevel)
                    {

foreach (IPublishedContent node in parent.Children)
{


    var isProtected = library.IsProtected(node.Id, node.Path);
    var loginAccess = library.IsProtected(node.Id, node.Path) && library.HasAccess(node.Id, node.Path);
    var naviHide = (bool)node.GetProperty("umbracoNaviHide").Value;
    var visible = (node.Where("Visible")) ? true : false;

    if (!isProtected || loginAccess)
    {
        if (!naviHide && visible)
        {


            if (node.Level <= finishLevel && node.Children.Where("Visible && !umbracoNaviHide").Any())
            {
                    <li class="dropdown">
                        <a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false">
                            @node.Name<span class="caret"></span>
                        </a>
                        <ul class="dropdown-menu">
                            <li class="@(CurrentPage.Name == node.Name ? "active" : null)">
                                <a href="@umbraco.library.NiceUrl(node.Id)">@node.Name</a>
                            </li>
                            @traverse(node, startLevel, finishLevel);
                        </ul>
                    </li>
                }
                else {
                    <li class="@(CurrentPage.Name == node.Name ? "active" : null)">
                        <a href="@umbraco.library.NiceUrl(node.Id)">@node.Name</a>
                    </li>
            }


        }
    }
}

}

                </ul>



        </div>
            </div>
</nav>

